---
description: 
globs: 
alwaysApply: false
---
# Git Commit 规范 (Angular Style)

本项目使用 Angular 提交规范来保持提交历史的一致性和可读性。

## 提交格式

```
<type>(<scope>): <subject>

<body>

<footer>
```

### 必需部分

#### Type (类型)
- **feat**: 新功能
- **fix**: Bug 修复
- **docs**: 文档变更
- **style**: 代码格式化（不影响代码运行的变动）
- **refactor**: 重构（既不是新增功能，也不是修复bug的代码变动）
- **test**: 增加测试
- **chore**: 构建过程或辅助工具的变动
- **perf**: 性能优化
- **ci**: CI配置文件和脚本的变动
- **build**: 影响构建系统或外部依赖的变动
- **revert**: 回滚之前的提交

#### Subject (主题)
- 使用祈使句，现在时态："change" 而不是 "changed" 或 "changes"
- 首字母小写
- 结尾不加句号
- 限制在50个字符以内
- 清晰简洁地描述变更内容

### 可选部分

#### Scope (范围)
- 用括号包围，表示影响的模块或组件
- 例如：`(components)`, `(utils)`, `(auth)`, `(ui)`
- 如果影响多个范围，可以用 `*` 表示

#### Body (正文)
- 详细描述变更的动机和前后对比
- 每行限制72个字符
- 可以包含多个段落

#### Footer (页脚)
- 用于关闭 Issue 或说明破坏性变更
- Breaking Changes: `BREAKING CHANGE: <description>`
- 关闭 Issue: `Closes #123, #456`

## 示例

### 基本提交
```
feat: add user authentication
fix: resolve memory leak in data processing
docs: update API documentation
style: format code according to eslint rules
refactor: extract utility functions to separate module
test: add unit tests for user service
chore: update dependencies
```

### 带范围的提交
```
feat(auth): implement OAuth2 login
fix(components): resolve button click handler
docs(api): add endpoint documentation
style(ui): update button component styling
refactor(utils): simplify data validation logic
```

### 带正文的提交
```
feat(user): add profile management functionality

Allow users to update their profile information including
name, email, and avatar. Includes form validation and
error handling for better user experience.

Closes #42
```

### 破坏性变更
```
feat(api): change user authentication method

BREAKING CHANGE: The authentication API has been updated.
Users now need to use JWT tokens instead of session cookies.
Please update your client code accordingly.
```

## 提交检查清单

- [ ] 使用正确的 type
- [ ] subject 简洁明了（≤50字符）
- [ ] 使用祈使句，现在时态
- [ ] subject 首字母小写，无句号
- [ ] 如果需要，添加适当的 scope
- [ ] 复杂变更添加 body 说明
- [ ] 破坏性变更在 footer 中说明
- [ ] 关联相关的 Issue 编号

## 工具建议

推荐使用 [Conventional Commits](mdc:https:/www.conventionalcommits.org) 工具来帮助格式化提交信息：

```bash
npm install -g @commitlint/cli @commitlint/config-conventional
npm install -g commitizen cz-conventional-changelog
```

使用 `git cz` 替代 `git commit` 来获得交互式提交界面。
